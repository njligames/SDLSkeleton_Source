
list(APPEND TARGET_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR})

set( TARGET_PROJECT_SOURCES ${TARGET_PROJECT_SOURCES} ${CMAKE_CURRENT_SOURCE_DIR}/GraphicsPlatform.h )

set(XCODE_DEVELOPMENT_TEAM $ENV{XCODE_DEVELOPMENT_TEAM})

add_library(SDL2 UNKNOWN IMPORTED)
set_property(TARGET SDL2 APPEND PROPERTY IMPORTED_LOCATION "${THIRDPARTY_DIR}/platform/${TARGET_PLATFORM}/Release\$(EFFECTIVE_PLATFORM_NAME)/libSDL2.a")
list(APPEND TARGET_LIBRARIES SDL2)
set_target_properties(SDL2 PROPERTIES INTERFACE_INCLUDE_DIRECTORIES ${THIRDPARTY_DIR}/includes/SDL2)
list(APPEND TARGET_INCLUDE_DIRS ${THIRDPARTY_DIR}/includes/SDL2)

add_library(curl UNKNOWN IMPORTED)
set_property(TARGET curl APPEND PROPERTY IMPORTED_LOCATION  "${THIRDPARTY_DIR}/platform/${TARGET_PLATFORM}/Release\$(EFFECTIVE_PLATFORM_NAME)/libcurl.a")
list(APPEND TARGET_LIBRARIES curl)
set_target_properties(curl PROPERTIES INTERFACE_INCLUDE_DIRECTORIES ${THIRDPARTY_DIR}/includes/curl)
list(APPEND TARGET_INCLUDE_DIRS ${THIRDPARTY_DIR}/includes/curl)

list(APPEND TARGET_INCLUDE_DIRS ${THIRDPARTY_DIR}/includes/rapidjson)
list(APPEND TARGET_INCLUDE_DIRS ${THIRDPARTY_DIR}/includes/nlohmann)
list(APPEND TARGET_INCLUDE_DIRS ${THIRDPARTY_DIR}/includes/stb)
list(APPEND TARGET_INCLUDE_DIRS ${THIRDPARTY_DIR}/includes/glm)
list(APPEND TARGET_INCLUDE_DIRS ${THIRDPARTY_DIR}/includes/NJLICEngine)

set(ASSET_CATALOGUE ${CMAKE_CURRENT_SOURCE_DIR}/resources/Assets.xcassets)
list(APPEND TARGET_RESOURCES ${ASSET_CATALOGUE})

set_source_files_properties( "${TARGET_RESOURCES}" PROPERTIES MACOSX_PACKAGE_LOCATION Resources)

set(CMAKE_OSX_SYSROOT "iphonesimulator")
set(CMAKE_XCODE_EFFECTIVE_PLATFORMS "-iphoneos;-iphonesimulator")

set(CMAKE_XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET "10.0" CACHE STRING "Minimum supported iOS version")

list(APPEND TARGET_LIBRARIES "-framework OpenGLES")
list(APPEND TARGET_LIBRARIES "-framework UIKit")
list(APPEND TARGET_LIBRARIES "-framework Foundation")
list(APPEND TARGET_LIBRARIES "-framework AVFoundation")
list(APPEND TARGET_LIBRARIES "-framework GameController")
list(APPEND TARGET_LIBRARIES "-framework CoreMotion")
list(APPEND TARGET_LIBRARIES "-framework CoreGraphics")
list(APPEND TARGET_LIBRARIES "-framework QuartzCore")
list(APPEND TARGET_LIBRARIES "-framework Metal")
list(APPEND TARGET_LIBRARIES "-framework AudioToolbox")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/resources/Info.plist.in ${CMAKE_BINARY_DIR}/Info.plist)

add_executable( ${PROJECT_NAME} ${TARGET_PROJECT_SOURCES} ${TARGET_MAIN_SOURCES} ${TARGET_INCLUDE_DIRS} ${TARGET_RESOURCES} )

set(MY_APP_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}")

set_target_properties(${PROJECT_NAME} PROPERTIES
    MACOSX_BUNDLE TRUE
        OUTPUT_NAME "${TARGET_EXECUTABLE_NAME}"
        MACOSX_BUNDLE TRUE
        MACOSX_BUNDLE_BUNDLE_NAME "My nice application name"
        MACOSX_BUNDLE_INFO_PLIST "${CMAKE_BINARY_DIR}/Info.plist"
        MACOSX_BUNDLE_BUNDLE_VERSION ${MY_APP_VERSION}
        MACOSX_BUNDLE_LONG_VERSION_STRING "My nice application name v${MY_APP_VERSION}"
        MACOSX_BUNDLE_SHORT_VERSION_STRING "${MY_APP_VERSION}"
        MACOSX_BUNDLE_GUI_IDENTIFIER "com.njligames.SDLSkeleton.ios"
        MACOSX_BUNDLE_COPYRIGHT "(C) 2020 NJLIGames LLC."
        MACOSX_RPATH TRUE
        # MACOSX_FRAMEWORK_IDENTIFIER com.myapp.bundle.id
        XCODE_ATTRIBUTE_LD_RUNPATH_SEARCH_PATHS "@loader_path/Libraries"
        RESOURCE "${TARGET_RESOURCES}"
        XCODE_ATTRIBUTE_ENABLE_HARDENED_RUNTIME TRUE
        XCODE_ATTRIBUTE_EXECUTABLE_NAME "${TARGET_EXECUTABLE_NAME}"
        INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRS}"
        XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2"
        XCODE_ATTRIBUTE_SDKROOT "iphoneos"
        XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER "com.njligames.SDLSkeleton.ios"
        # XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER "com.njligames.engine.ios.source"
        XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME "AppIcon"
        XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
        XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME "LaunchImage"
        XCODE_ATTRIBUTE_ENABLE_BITCODE NO

        # XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
        XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer: James Folk (FWZPKCY3PH)"
        XCODE_ATTRIBUTE_DEVELOPMENT_TEAM $ENV{XCODE_DEVELOPMENT_TEAM}
        XCODE_ATTRIBUTE_PROVISIONING_PROFILE_SPECIFIER "86ce4d81-fd7e-46b2-ae6a-3092b4af6cd"
        XCODE_ATTRIBUTE_CODE_SIGN_STYLE "Manual"

    )


# set_target_properties(
#     ${PROJECT_NAME} PROPERTIES
#
#     MACOSX_BUNDLE TRUE
#     RESOURCE "${TARGET_RESOURCES}"
#
#     XCODE_ATTRIBUTE_DEVELOPMENT_TEAM "${XCODE_DEVELOPMENT_TEAM}"
#     OUTPUT_NAME "${TARGET_EXECUTABLE_NAME}"
#     POSITION_INDEPENDENT_CODE ON
#     XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2"
#     XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
#     MACOSX_BUNDLE_INFO_PLIST "${CMAKE_BINARY_DIR}/Info.plist"
#     XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME "AppIcon"
#     XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER com.njligames.${TARGET_PLATFORM}.${PROJECT_NAME}
#     XCODE_ATTRIBUTE_SDKROOT "iphoneos"
#     XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
#     XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME "LaunchImage"
#     XCODE_ATTRIBUTE_PRODUCT_NAME ${TARGET_EXECUTABLE_NAME}
#     XCODE_ATTRIBUTE_ENABLE_BITCODE NO
#     XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
#     INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRS}"
#     )

target_compile_definitions( ${PROJECT_NAME} PUBLIC ${TARGET_DEFINITIONS})
target_link_libraries( ${PROJECT_NAME} ${TARGET_LIBRARIES})

if(TARGET_PROJECT_SOURCES)
    # add_library( ${PROJECT_NAME}-static ${TARGET_PROJECT_SOURCES} ${TARGET_INCLUDE_DIRS} )

    # set_target_properties(
    #     ${PROJECT_NAME}-static PROPERTIES
    #     MACOSX_BUNDLE TRUE

    #     XCODE_ATTRIBUTE_DEVELOPMENT_TEAM "${XCODE_DEVELOPMENT_TEAM}"
    #     POSITION_INDEPENDENT_CODE ON
    #     XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2"
    #     XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
    #     XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER com.njligames.${TARGET_PLATFORM}.${PROJECT_NAME}.static
    #     XCODE_ATTRIBUTE_SDKROOT "iphoneos"
    #     XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    #     XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    #     XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
    #     INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRS}"
    #     XCODE_ATTRIBUTE_PRODUCT_NAME ${TARGET_EXECUTABLE_NAME}
    #     )

    # target_compile_definitions( ${PROJECT_NAME}-static PUBLIC ${TARGET_DEFINITIONS})
    # target_link_libraries( ${PROJECT_NAME}-static ${TARGET_LIBRARIES})


    # add_library( ${PROJECT_NAME}Framework ${TARGET_PROJECT_SOURCES} ${TARGET_INCLUDE_DIRS} )

    # set_target_properties(
    #     ${PROJECT_NAME}Framework PROPERTIES

    #     FRAMEWORK TRUE
    #     FRAMEWORK_VERSION C

    #     RESOURCE "${TARGET_RESOURCES}"

    #     XCODE_ATTRIBUTE_DEVELOPMENT_TEAM "${XCODE_DEVELOPMENT_TEAM}"
    #     OUTPUT_NAME "${TARGET_EXECUTABLE_NAME}"
    #     POSITION_INDEPENDENT_CODE ON
    #     XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2"
    #     XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
    #     MACOSX_BUNDLE_INFO_PLIST "${CMAKE_BINARY_DIR}/Info.plist"
    #     XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME "AppIcon"
    #     XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER com.njligames.${TARGET_PLATFORM}.${PROJECT_NAME}.framework
    #     XCODE_ATTRIBUTE_SDKROOT "iphoneos"
    #     XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    #     XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME "LaunchImage"
    #     XCODE_ATTRIBUTE_PRODUCT_NAME ${TARGET_EXECUTABLE_NAME}
    #     XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    #     XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
    #     INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRS}"
    #     VERSION 1.0.0
    #     SOVERSION 1.0.0
    #     PUBLIC_HEADER "${TARGET_INCLUDE_DIRS}"
    #     )

    # target_compile_definitions( ${PROJECT_NAME}Framework PUBLIC ${TARGET_DEFINITIONS})
    # target_link_libraries( ${PROJECT_NAME}Framework ${TARGET_LIBRARIES})

    set(CLANG_FORMAT_BIN "/usr/local/bin/clang-format" CACHE STRING "use: `brew install clang-format` to install")
    add_custom_target(
        clang-format
        COMMAND ${CLANG_FORMAT_BIN} -style=file -i ${TARGET_PROJECT_SOURCES} ${TARGET_MAIN_SOURCES} -verbose
        SOURCES
        "${CMAKE_SOURCE_DIR}/.clang-format"
        )
endif()

if(BUILD_TEST)
    enable_testing()
    add_subdirectory(test)
endif()
